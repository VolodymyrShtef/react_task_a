{"version":3,"sources":["components/Friends/Friends.module.css","components/Statistics/Statistics.module.css","components/Profile.module.css","components/Transactions/Transactions.module.css","components/Profile.js","components/Statistics/Statistics.js","components/Friends/Friends.js","components/Transactions/Transactions.js","components/App.js","index.js"],"names":["module","exports","Profile","userProf","name","tag","location","avatar","stats","followers","views","likes","className","styles","profile","description","src","alt","width","StatElement","label","percentage","item","Statistics","title","elements","map","key","id","stat_list","FriendItem","friend","statusColor","isOnline","notOnline","Friends","markup","friends","friend_list","TableItem","transaction","type","amount","currency","Transactions","transactions","transaction_history","App","user","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.99d48eae.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend_list\":\"Friends_friend_list__3QCTx\",\"item\":\"Friends_item__1adb1\",\"name\":\"Friends_name__1Pf21\",\"status\":\"Friends_status__2Z-Rv\",\"isOnline\":\"Friends_isOnline__1vZDe Friends_status__2Z-Rv\",\"notOnline\":\"Friends_notOnline__3qZ9- Friends_status__2Z-Rv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stat_list\":\"Statistics_stat_list__1zmD1\",\"item\":\"Statistics_item__3-wvk\",\"label\":\"Statistics_label__3guUn\",\"percentage\":\"Statistics_percentage__381sw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__39vKT\",\"stats\":\"Profile_stats__1aBkj\",\"description\":\"Profile_description__3KE7O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transaction_history\":\"Transactions_transaction_history__2xjQl\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Profile.module.css';\r\n\r\n// якщо сюди передаються пропси у формі окремих параметри\r\n// а приймаєш їх у об'єкт, то фігурні дужки не треба\r\n// якщо передається об'єкт, то тут треба фігурні дужки\r\nfunction Profile(userProf) {\r\n  const {\r\n    name,\r\n    tag,\r\n    location,\r\n    avatar,\r\n    stats: { followers, views, likes },\r\n    // це глибока деструктуризація\r\n  } = userProf;\r\n\r\n  return (\r\n    <div className={styles.profile}>\r\n      <div className={styles.description}>\r\n        <img src={avatar} alt=\"user avatar\" className=\"avatar\" width=\"230\" />\r\n        <p className=\"name\">{name}</p>\r\n        <p className=\"tag\">@{tag}</p>\r\n        <p className=\"location\">{location}</p>\r\n      </div>\r\n\r\n      <ul className={styles.stats}>\r\n        <li>\r\n          <span className=\"label\">Followers</span>\r\n          <span className=\"quantity\">{followers}</span>\r\n        </li>\r\n        <li>\r\n          <span className=\"label\">Views</span>\r\n          <span className=\"quantity\">{views}</span>\r\n        </li>\r\n        <li>\r\n          <span className=\"label\">Likes</span>\r\n          <span className=\"quantity\">{likes}</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\nProfile.propTypes = {\r\n  name: PropTypes.string,\r\n  tag: PropTypes.string,\r\n  location: PropTypes.string,\r\n  avatar: PropTypes.string,\r\n  stats: PropTypes.object,\r\n};\r\nexport default Profile;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Statistics.module.css';\r\n\r\nfunction Statistics({ title, stats }) {\r\n  const elements = stats.map(item => (\r\n    // якщо генерується розмітка із масиву, то кожен елемент\r\n    // повинен мати унікальний ідентифікатор key\r\n    // !!!зверни увагу! - key записується тут, а не у тій функції, де генерується розмітка\r\n    <StatElement key={item.id} stats={item} />\r\n  ));\r\n  return (\r\n    <section className=\"statistics\">\r\n      {title && <h2 className=\"title\">{title}</h2>}\r\n      <ul className={styles.stat_list}>{elements}</ul>\r\n    </section>\r\n  );\r\n}\r\n\r\n// можна робити деструктуризацію в параметрах функції\r\nfunction StatElement({ stats: { label, percentage } }) {\r\n  // а можна приймати об'єкт, а потім деструктуризувати його\r\n  // const { label, percentage } = stats;\r\n  return (\r\n    <li className={styles.item}>\r\n      <span className={styles.label}>{label}</span>\r\n      <span className={styles.percentage}>{percentage}%</span>\r\n    </li>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string,\r\n  stats: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\n// import PropTypes from 'prop-types';\r\nimport styles from './Friends.module.css';\r\n\r\nfunction Friends({ friends }) {\r\n  const markup = friends.map(friend => (\r\n    <FriendItem key={friend.id} friend={friend} />\r\n  ));\r\n  return <ul className={styles.friend_list}>{markup}</ul>;\r\n}\r\nfunction FriendItem({ friend }) {\r\n  const { avatar, name, isOnline } = friend;\r\n  const statusColor = isOnline ? styles.isOnline : styles.notOnline;\r\n  return (\r\n    <li className={styles.item}>\r\n      <span className={statusColor}></span>\r\n      <img className=\"avatar\" src={avatar} alt=\"avatar\" width=\"80\" />\r\n      <p className={styles.name}>{name}</p>\r\n    </li>\r\n  );\r\n}\r\nexport default Friends;\r\n","import React from 'react';\r\nimport styles from './Transactions.module.css';\r\n\r\nfunction Transactions({ transactions }) {\r\n  const markup = transactions.map(transaction => (\r\n    <TableItem key={transaction.id} transaction={transaction} />\r\n  ));\r\n\r\n  return (\r\n    <table className={styles.transaction_history}>\r\n      <thead>\r\n        <tr>\r\n          <th>Type</th>\r\n          <th>Amount</th>\r\n          <th>Currency</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>{markup}</tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nfunction TableItem({ transaction: { type, amount, currency } }) {\r\n  return (\r\n    <tr>\r\n      <td>{type}</td>\r\n      <td>{amount}</td>\r\n      <td>{currency}</td>\r\n    </tr>\r\n  );\r\n}\r\nexport default Transactions;\r\n","import React from 'react';\r\n\r\nimport Profile from './Profile.js';\r\nimport Statistics from './Statistics/Statistics.js';\r\nimport Friends from './Friends/Friends';\r\nimport Transactions from './Transactions/Transactions.js';\r\n\r\nimport user from '../user.json';\r\nimport stats from './Statistics/stat-data.json';\r\nimport friends from './Friends/friends.json';\r\nimport transactions from './Transactions/transactions.json';\r\n// в цьому файлі збираються до купи всі компоненти\r\n// вони потім передаються в index.js для рендера\r\n// компоненти збираються в одному батьківському елементі, в даному випадку це фітивний елемент <>\r\n\r\nexport default function App() {\r\n  return (\r\n    <>\r\n      {/* на прикладі Profile видно, як можна передати пропси у формі окремих аргументів\r\nа також у формі об'єкта */}\r\n      <Profile\r\n        name={user.name}\r\n        tag={user.tag}\r\n        location={user.location}\r\n        avatar={user.avatar}\r\n        stats={user.stats}\r\n      />\r\n\r\n      {/* <Profile userProf={user} /> */}\r\n\r\n      <Statistics title=\"Uploaded\" stats={stats} />\r\n\r\n      <Friends friends={friends} />\r\n\r\n      <Transactions transactions={transactions} />\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nReactDOM.render(<App />, document.getElementById('root'));\n// цей файл використовується виключно для рендера\n// збірка всіх компонентів проходить у файлі App.js\n"],"sourceRoot":""}